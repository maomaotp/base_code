/* soapStub.h
   Generated by gSOAP 2.8.14 from ssl.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_RESEND 10000;
#include "stdsoap2.h"
#if GSOAP_VERSION != 20814
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__xop__Include
#define SOAP_TYPE__xop__Include (7)
/* Base64 schema type: */
struct _xop__Include
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 7; } /* = unique id SOAP_TYPE__xop__Include */
};
typedef struct _xop__Include _xop__Include;
#endif

#ifndef SOAP_TYPE_xmime5__base64Binary
#define SOAP_TYPE_xmime5__base64Binary (11)
/* Base64 schema type: */
struct xmime5__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 11; } /* = unique id SOAP_TYPE_xmime5__base64Binary */
};
typedef struct xmime5__base64Binary xmime5__base64Binary;
#endif

#ifndef SOAP_TYPE_ns__MsgItem
#define SOAP_TYPE_ns__MsgItem (14)
/* ns:MsgItem */
struct ns__MsgItem
{
public:
	char *type;	/* optional element of type xsd:string */
	char *msg;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ns__MsgItem */
};
#endif

#ifndef SOAP_TYPE_ns__MsgList
#define SOAP_TYPE_ns__MsgList (15)
/* Sequence of ns:MsgList schema type: */
struct ns__MsgList
{
public:
	struct ns__MsgItem *__ptr;
	int __size;
public:
	int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns__MsgList */
};
#endif

#ifndef SOAP_TYPE_ns__ResultItem
#define SOAP_TYPE_ns__ResultItem (17)
/* ns:ResultItem */
struct ns__ResultItem
{
public:
	unsigned long TimeStamp;	/* required element of type xsd:unsignedLong */
	char *Order;	/* optional element of type xsd:string */
	char *Param;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 17; } /* = unique id SOAP_TYPE_ns__ResultItem */
};
#endif

#ifndef SOAP_TYPE_ns__ResultList
#define SOAP_TYPE_ns__ResultList (20)
/* Sequence of ns:ResultList schema type: */
struct ns__ResultList
{
public:
	struct ns__ResultItem **__ptr;
	int __size;
public:
	int soap_type() const { return 20; } /* = unique id SOAP_TYPE_ns__ResultList */
};
#endif

#ifndef SOAP_TYPE_ns__upload_messageResponse
#define SOAP_TYPE_ns__upload_messageResponse (26)
/* ns:upload-messageResponse */
struct ns__upload_messageResponse
{
public:
	struct ns__ResultList *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns:ResultList */
public:
	int soap_type() const { return 26; } /* = unique id SOAP_TYPE_ns__upload_messageResponse */
};
#endif

#ifndef SOAP_TYPE_ns__upload_message
#define SOAP_TYPE_ns__upload_message (27)
/* ns:upload-message */
struct ns__upload_message
{
public:
	char *Device_ID;	/* optional element of type xsd:string */
	int returntype;	/* required element of type xsd:int */
	struct ns__MsgList *state;	/* optional element of type ns:MsgList */
	char *authstr;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 27; } /* = unique id SOAP_TYPE_ns__upload_message */
};
#endif

#ifndef SOAP_TYPE_x__Data
#define SOAP_TYPE_x__Data (28)
/* x:Data */
struct x__Data
{
public:
	struct _xop__Include xop__Include;	/* required element of type xop:Include */
	char *xmime5__contentType;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 28; } /* = unique id SOAP_TYPE_x__Data */
};
#endif

#ifndef SOAP_TYPE_x__DataSet
#define SOAP_TYPE_x__DataSet (29)
/* x:DataSet */
struct x__DataSet
{
public:
	int __size;	/* sequence of elements <item> */
	struct x__Data *item;	/* optional element of type x:Data */
public:
	int soap_type() const { return 29; } /* = unique id SOAP_TYPE_x__DataSet */
};
#endif

#ifndef SOAP_TYPE_x__Keys
#define SOAP_TYPE_x__Keys (31)
/* x:Keys */
struct x__Keys
{
public:
	int __size;	/* sequence of elements <key> */
	char **key;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 31; } /* = unique id SOAP_TYPE_x__Keys */
};
#endif

#ifndef SOAP_TYPE_ns__PutDataResponse
#define SOAP_TYPE_ns__PutDataResponse (37)
/* ns:PutDataResponse */
struct ns__PutDataResponse
{
public:
	int *response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 37; } /* = unique id SOAP_TYPE_ns__PutDataResponse */
};
#endif

#ifndef SOAP_TYPE_ns__PutData
#define SOAP_TYPE_ns__PutData (38)
/* ns:PutData */
struct ns__PutData
{
public:
	struct x__DataSet *x__data;	/* optional element of type x:DataSet */
	struct x__Keys *x__keys;	/* optional element of type x:Keys */
	char *device_id;	/* optional element of type xsd:string */
	char *authstr;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 38; } /* = unique id SOAP_TYPE_ns__PutData */
};
#endif

#ifndef SOAP_TYPE_ns__GetDataResponse
#define SOAP_TYPE_ns__GetDataResponse (39)
/* ns:GetDataResponse */
struct ns__GetDataResponse
{
public:
	struct x__DataSet x__data;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type x:DataSet */
public:
	int soap_type() const { return 39; } /* = unique id SOAP_TYPE_ns__GetDataResponse */
};
#endif

#ifndef SOAP_TYPE_ns__GetData
#define SOAP_TYPE_ns__GetData (42)
/* ns:GetData */
struct ns__GetData
{
public:
	struct x__Keys *x__keys;	/* optional element of type x:Keys */
	char *device_id;	/* optional element of type xsd:string */
	char *authstr;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 42; } /* = unique id SOAP_TYPE_ns__GetData */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (43)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 43; } /* = unique id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (44)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 44; } /* = unique id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (46)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 46; } /* = unique id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (49)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 49; } /* = unique id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (50)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 50; } /* = unique id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (13)
typedef double xsd__double;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns__upload_message(struct soap*, char *Device_ID, int returntype, struct ns__MsgList *state, char *authstr, struct ns__ResultList *result);

SOAP_FMAC5 int SOAP_FMAC6 ns__PutData(struct soap*, struct x__DataSet *x__data, struct x__Keys *x__keys, char *device_id, char *authstr, int *response);

SOAP_FMAC5 int SOAP_FMAC6 ns__GetData(struct soap*, struct x__Keys *x__keys, char *device_id, char *authstr, struct ns__GetDataResponse *_param_1);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__upload_message(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__PutData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetData(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__upload_message(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *Device_ID, int returntype, struct ns__MsgList *state, char *authstr, struct ns__ResultList *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__PutData(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct x__DataSet *x__data, struct x__Keys *x__keys, char *device_id, char *authstr, int *response);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetData(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct x__Keys *x__keys, char *device_id, char *authstr, struct ns__GetDataResponse *_param_1);

#endif

/* End of soapStub.h */

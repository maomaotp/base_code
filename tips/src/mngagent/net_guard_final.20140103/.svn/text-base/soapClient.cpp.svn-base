/* soapClient.cpp
   Generated by gSOAP 2.8.14 from ssl.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.14 2013-03-31 11:10:41 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__upload_message(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *Device_ID, int returntype, struct ns__MsgList *state, char *authstr, struct ns__ResultList *result)
{	struct ns__upload_message soap_tmp_ns__upload_message;
	struct ns__upload_messageResponse *soap_tmp_ns__upload_messageResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://127.0.0.1:8000";
	soap->encodingStyle = "";
	soap_tmp_ns__upload_message.Device_ID = Device_ID;
	soap_tmp_ns__upload_message.returntype = returntype;
	soap_tmp_ns__upload_message.state = state;
	soap_tmp_ns__upload_message.authstr = authstr;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__upload_message(soap, &soap_tmp_ns__upload_message);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__upload_message(soap, &soap_tmp_ns__upload_message, "ns:upload-message", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__upload_message(soap, &soap_tmp_ns__upload_message, "ns:upload-message", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!result)
		return soap_closesock(soap);
	soap_default_ns__ResultList(soap, result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__upload_messageResponse = soap_get_ns__upload_messageResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (result && soap_tmp_ns__upload_messageResponse->result)
		*result = *soap_tmp_ns__upload_messageResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__PutData(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct x__DataSet *x__data, struct x__Keys *x__keys, char *device_id, char *authstr, int *response)
{
	printf("soap_call_ns__PutData start\n");
	struct ns__PutData soap_tmp_ns__PutData;
	struct ns__PutDataResponse *soap_tmp_ns__PutDataResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://127.0.0.1:8000";
	soap->encodingStyle = "";
	soap_tmp_ns__PutData.x__data = x__data;
	soap_tmp_ns__PutData.x__keys = x__keys;
	soap_tmp_ns__PutData.device_id = device_id;
	soap_tmp_ns__PutData.authstr = authstr;
	soap_begin(soap);
	soap_serializeheader(soap);
	printf("__LINE__=%d\n", __LINE__);
	soap_serialize_ns__PutData(soap, &soap_tmp_ns__PutData);
	printf("__LINE__=%d\n", __LINE__);
	if (soap_begin_count(soap))
		return soap->error;
	printf("__LINE__=%d\n", __LINE__);
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__PutData(soap, &soap_tmp_ns__PutData, "ns:PutData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	printf("__LINE__=%d\n", __LINE__);
	if (soap_end_count(soap))
		return soap->error;
	printf("__LINE__=%d\n", __LINE__);
	int ret[8]={0};
	if ((ret[0]=soap_connect(soap, soap_endpoint, soap_action))
	 || (ret[1]=soap_envelope_begin_out(soap))
	 || (ret[2]=soap_putheader(soap))
	 || (ret[3]=soap_body_begin_out(soap))
	 || (ret[4]=soap_put_ns__PutData(soap, &soap_tmp_ns__PutData, "ns:PutData", NULL))
	 || (ret[5]=soap_body_end_out(soap))
	 || (ret[6]=soap_envelope_end_out(soap))
	 || (ret[7]=soap_end_send(soap)))
	{
		printf("__LINE__=%d\n", __LINE__);
		for(int i = 0;i<8;i++)
		{
			printf("ret%d=%d\n",i,ret[i]);
		}
		return soap_closesock(soap);
	}
	printf("__LINE__=%d\n", __LINE__);
	if (!response)
	{
		printf("response=%d\n",*response);
		return soap_closesock(soap);
	}
	printf("__LINE__=%d\n", __LINE__);
	soap_default_int(soap, response);
	printf("__LINE__=%d\n", __LINE__);
	int ret1=0,ret2=0,ret3=0,ret4=0;
	if ((ret1=soap_begin_recv(soap))
	 || (ret2=soap_envelope_begin_in(soap))
	 || (ret3=soap_recv_header(soap))
	 || (ret4=soap_body_begin_in(soap)))
	{
		printf("soap_begin_recv(soap)|| soap_envelope_begin_in(soap)|| soap_recv_header(soap)|| soap_body_begin_in(soap)\n");
		printf("ret1=%d ret2=%d ret3=%d ret4=%d\n", ret1, ret2, ret3, ret4);
		return soap_closesock(soap);
	}
	printf("__LINE__=%d\n", __LINE__);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__PutDataResponse = soap_get_ns__PutDataResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (response && soap_tmp_ns__PutDataResponse->response)
		*response = *soap_tmp_ns__PutDataResponse->response;
	printf("__LINE__=%d\n", __LINE__);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetData(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct x__Keys *x__keys, char *device_id, char *authstr, struct ns__GetDataResponse *_param_1)
{	struct ns__GetData soap_tmp_ns__GetData;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://127.0.0.1:8000";
	soap->encodingStyle = "";
	soap_tmp_ns__GetData.x__keys = x__keys;
	soap_tmp_ns__GetData.device_id = device_id;
	soap_tmp_ns__GetData.authstr = authstr;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetData(soap, &soap_tmp_ns__GetData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetData(soap, &soap_tmp_ns__GetData, "ns:GetData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetData(soap, &soap_tmp_ns__GetData, "ns:GetData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!_param_1)
		return soap_closesock(soap);
	soap_default_ns__GetDataResponse(soap, _param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns__GetDataResponse(soap, _param_1, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */

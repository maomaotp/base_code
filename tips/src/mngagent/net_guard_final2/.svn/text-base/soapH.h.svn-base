/* soapH.h
   Generated by gSOAP 2.8.14 from ssl.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin(soap), soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin(soap), soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

#ifndef soap_write_long
#define soap_write_long(soap, data) ( soap_begin(soap), soap_serialize_long(soap, data), soap_begin_send(soap) || soap_put_long(soap, data, "long", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

#ifndef soap_read_long
#define soap_read_long(soap, data) ( soap_begin_recv(soap) || !soap_get_long(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (13)
#endif

#define soap_default_xsd__double(soap, a) soap_default_double(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_xsd__double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_xsd__double
#define soap_write_xsd__double(soap, data) ( soap_begin(soap), soap_serialize_xsd__double(soap, data), soap_begin_send(soap) || soap_put_xsd__double(soap, data, "xsd:double", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_xsd__double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_xsd__double
#define soap_read_xsd__double(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__double(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin(soap), soap_serialize_double(soap, data), soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_begin(soap), soap_serialize_unsignedByte(soap, data), soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_begin(soap), soap_serialize_unsignedInt(soap, data), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedLong
#define SOAP_TYPE_unsignedLong (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLong(struct soap*, unsigned long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLong(struct soap*, const char*, int, const unsigned long *, const char*);
SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_in_unsignedLong(struct soap*, const char*, unsigned long *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLong(struct soap*, const unsigned long *, const char*, const char*);

#ifndef soap_write_unsignedLong
#define soap_write_unsignedLong(soap, data) ( soap_begin(soap), soap_serialize_unsignedLong(soap, data), soap_begin_send(soap) || soap_put_unsignedLong(soap, data, "unsignedLong", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_get_unsignedLong(struct soap*, unsigned long *, const char*, const char*);

#ifndef soap_read_unsignedLong
#define soap_read_unsignedLong(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedLong(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns__GetData
#define SOAP_TYPE_ns__GetData (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GetData(struct soap*, struct ns__GetData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GetData(struct soap*, const struct ns__GetData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GetData(struct soap*, const char*, int, const struct ns__GetData *, const char*);
SOAP_FMAC3 struct ns__GetData * SOAP_FMAC4 soap_in_ns__GetData(struct soap*, const char*, struct ns__GetData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GetData(struct soap*, const struct ns__GetData *, const char*, const char*);

#ifndef soap_write_ns__GetData
#define soap_write_ns__GetData(soap, data) ( soap_begin(soap), soap_serialize_ns__GetData(soap, data), soap_begin_send(soap) || soap_put_ns__GetData(soap, data, "ns:GetData", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__GetData * SOAP_FMAC4 soap_get_ns__GetData(struct soap*, struct ns__GetData *, const char*, const char*);

#ifndef soap_read_ns__GetData
#define soap_read_ns__GetData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GetData(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__GetData * SOAP_FMAC2 soap_instantiate_ns__GetData(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__GetData * soap_new_ns__GetData(struct soap *soap, int n = -1) { return soap_instantiate_ns__GetData(soap, n, NULL, NULL, NULL); }

inline struct ns__GetData * soap_new_req_ns__GetData(struct soap *soap) { struct ns__GetData *_p = soap_instantiate_ns__GetData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetData(soap, _p); } return _p; }

inline struct ns__GetData * soap_new_set_ns__GetData(struct soap *soap, struct x__Keys *x__keys, char *device_id, char *authstr) { struct ns__GetData *_p = soap_instantiate_ns__GetData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetData(soap, _p); _p->x__keys = x__keys; _p->device_id = device_id; _p->authstr = authstr; } return _p; }

inline void soap_delete_ns__GetData(struct soap *soap, struct ns__GetData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GetData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__GetDataResponse
#define SOAP_TYPE_ns__GetDataResponse (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GetDataResponse(struct soap*, struct ns__GetDataResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GetDataResponse(struct soap*, const struct ns__GetDataResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GetDataResponse(struct soap*, const char*, int, const struct ns__GetDataResponse *, const char*);
SOAP_FMAC3 struct ns__GetDataResponse * SOAP_FMAC4 soap_in_ns__GetDataResponse(struct soap*, const char*, struct ns__GetDataResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GetDataResponse(struct soap*, const struct ns__GetDataResponse *, const char*, const char*);

#ifndef soap_write_ns__GetDataResponse
#define soap_write_ns__GetDataResponse(soap, data) ( soap_begin(soap), soap_serialize_ns__GetDataResponse(soap, data), soap_begin_send(soap) || soap_put_ns__GetDataResponse(soap, data, "ns:GetDataResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__GetDataResponse * SOAP_FMAC4 soap_get_ns__GetDataResponse(struct soap*, struct ns__GetDataResponse *, const char*, const char*);

#ifndef soap_read_ns__GetDataResponse
#define soap_read_ns__GetDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GetDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__GetDataResponse * SOAP_FMAC2 soap_instantiate_ns__GetDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__GetDataResponse * soap_new_ns__GetDataResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns__GetDataResponse(soap, n, NULL, NULL, NULL); }

inline struct ns__GetDataResponse * soap_new_req_ns__GetDataResponse(struct soap *soap, struct x__DataSet& x__data) { struct ns__GetDataResponse *_p = soap_instantiate_ns__GetDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDataResponse(soap, _p); _p->x__data = x__data; } return _p; }

inline struct ns__GetDataResponse * soap_new_set_ns__GetDataResponse(struct soap *soap, struct x__DataSet& x__data) { struct ns__GetDataResponse *_p = soap_instantiate_ns__GetDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDataResponse(soap, _p); _p->x__data = x__data; } return _p; }

inline void soap_delete_ns__GetDataResponse(struct soap *soap, struct ns__GetDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GetDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__PutData
#define SOAP_TYPE_ns__PutData (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__PutData(struct soap*, struct ns__PutData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__PutData(struct soap*, const struct ns__PutData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__PutData(struct soap*, const char*, int, const struct ns__PutData *, const char*);
SOAP_FMAC3 struct ns__PutData * SOAP_FMAC4 soap_in_ns__PutData(struct soap*, const char*, struct ns__PutData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__PutData(struct soap*, const struct ns__PutData *, const char*, const char*);

#ifndef soap_write_ns__PutData
#define soap_write_ns__PutData(soap, data) ( soap_begin(soap), soap_serialize_ns__PutData(soap, data), soap_begin_send(soap) || soap_put_ns__PutData(soap, data, "ns:PutData", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__PutData * SOAP_FMAC4 soap_get_ns__PutData(struct soap*, struct ns__PutData *, const char*, const char*);

#ifndef soap_read_ns__PutData
#define soap_read_ns__PutData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__PutData(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__PutData * SOAP_FMAC2 soap_instantiate_ns__PutData(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__PutData * soap_new_ns__PutData(struct soap *soap, int n = -1) { return soap_instantiate_ns__PutData(soap, n, NULL, NULL, NULL); }

inline struct ns__PutData * soap_new_req_ns__PutData(struct soap *soap) { struct ns__PutData *_p = soap_instantiate_ns__PutData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__PutData(soap, _p); } return _p; }

inline struct ns__PutData * soap_new_set_ns__PutData(struct soap *soap, struct x__DataSet *x__data, struct x__Keys *x__keys, char *device_id, char *authstr) { struct ns__PutData *_p = soap_instantiate_ns__PutData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__PutData(soap, _p); _p->x__data = x__data; _p->x__keys = x__keys; _p->device_id = device_id; _p->authstr = authstr; } return _p; }

inline void soap_delete_ns__PutData(struct soap *soap, struct ns__PutData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__PutData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__PutDataResponse
#define SOAP_TYPE_ns__PutDataResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__PutDataResponse(struct soap*, struct ns__PutDataResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__PutDataResponse(struct soap*, const struct ns__PutDataResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__PutDataResponse(struct soap*, const char*, int, const struct ns__PutDataResponse *, const char*);
SOAP_FMAC3 struct ns__PutDataResponse * SOAP_FMAC4 soap_in_ns__PutDataResponse(struct soap*, const char*, struct ns__PutDataResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__PutDataResponse(struct soap*, const struct ns__PutDataResponse *, const char*, const char*);

#ifndef soap_write_ns__PutDataResponse
#define soap_write_ns__PutDataResponse(soap, data) ( soap_begin(soap), soap_serialize_ns__PutDataResponse(soap, data), soap_begin_send(soap) || soap_put_ns__PutDataResponse(soap, data, "ns:PutDataResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__PutDataResponse * SOAP_FMAC4 soap_get_ns__PutDataResponse(struct soap*, struct ns__PutDataResponse *, const char*, const char*);

#ifndef soap_read_ns__PutDataResponse
#define soap_read_ns__PutDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__PutDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__PutDataResponse * SOAP_FMAC2 soap_instantiate_ns__PutDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__PutDataResponse * soap_new_ns__PutDataResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns__PutDataResponse(soap, n, NULL, NULL, NULL); }

inline struct ns__PutDataResponse * soap_new_req_ns__PutDataResponse(struct soap *soap) { struct ns__PutDataResponse *_p = soap_instantiate_ns__PutDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__PutDataResponse(soap, _p); } return _p; }

inline struct ns__PutDataResponse * soap_new_set_ns__PutDataResponse(struct soap *soap, int *response) { struct ns__PutDataResponse *_p = soap_instantiate_ns__PutDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__PutDataResponse(soap, _p); _p->response = response; } return _p; }

inline void soap_delete_ns__PutDataResponse(struct soap *soap, struct ns__PutDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__PutDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_x__Keys
#define SOAP_TYPE_x__Keys (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_x__Keys(struct soap*, struct x__Keys *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_x__Keys(struct soap*, const struct x__Keys *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_x__Keys(struct soap*, const char*, int, const struct x__Keys *, const char*);
SOAP_FMAC3 struct x__Keys * SOAP_FMAC4 soap_in_x__Keys(struct soap*, const char*, struct x__Keys *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_x__Keys(struct soap*, const struct x__Keys *, const char*, const char*);

#ifndef soap_write_x__Keys
#define soap_write_x__Keys(soap, data) ( soap_begin(soap), soap_serialize_x__Keys(soap, data), soap_begin_send(soap) || soap_put_x__Keys(soap, data, "x:Keys", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct x__Keys * SOAP_FMAC4 soap_get_x__Keys(struct soap*, struct x__Keys *, const char*, const char*);

#ifndef soap_read_x__Keys
#define soap_read_x__Keys(soap, data) ( soap_begin_recv(soap) || !soap_get_x__Keys(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct x__Keys * SOAP_FMAC2 soap_instantiate_x__Keys(struct soap*, int, const char*, const char*, size_t*);

inline struct x__Keys * soap_new_x__Keys(struct soap *soap, int n = -1) { return soap_instantiate_x__Keys(soap, n, NULL, NULL, NULL); }

inline struct x__Keys * soap_new_req_x__Keys(struct soap *soap, int __size, char **key) { struct x__Keys *_p = soap_instantiate_x__Keys(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_x__Keys(soap, _p); _p->__size = __size; _p->key = key; } return _p; }

inline struct x__Keys * soap_new_set_x__Keys(struct soap *soap, int __size, char **key) { struct x__Keys *_p = soap_instantiate_x__Keys(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_x__Keys(soap, _p); _p->__size = __size; _p->key = key; } return _p; }

inline void soap_delete_x__Keys(struct soap *soap, struct x__Keys *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_x__Keys(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_x__DataSet
#define SOAP_TYPE_x__DataSet (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_x__DataSet(struct soap*, struct x__DataSet *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_x__DataSet(struct soap*, const struct x__DataSet *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_x__DataSet(struct soap*, const char*, int, const struct x__DataSet *, const char*);
SOAP_FMAC3 struct x__DataSet * SOAP_FMAC4 soap_in_x__DataSet(struct soap*, const char*, struct x__DataSet *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_x__DataSet(struct soap*, const struct x__DataSet *, const char*, const char*);

#ifndef soap_write_x__DataSet
#define soap_write_x__DataSet(soap, data) ( soap_begin(soap), soap_serialize_x__DataSet(soap, data), soap_begin_send(soap) || soap_put_x__DataSet(soap, data, "x:DataSet", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct x__DataSet * SOAP_FMAC4 soap_get_x__DataSet(struct soap*, struct x__DataSet *, const char*, const char*);

#ifndef soap_read_x__DataSet
#define soap_read_x__DataSet(soap, data) ( soap_begin_recv(soap) || !soap_get_x__DataSet(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct x__DataSet * SOAP_FMAC2 soap_instantiate_x__DataSet(struct soap*, int, const char*, const char*, size_t*);

inline struct x__DataSet * soap_new_x__DataSet(struct soap *soap, int n = -1) { return soap_instantiate_x__DataSet(soap, n, NULL, NULL, NULL); }

inline struct x__DataSet * soap_new_req_x__DataSet(struct soap *soap, int __size, struct x__Data *item) { struct x__DataSet *_p = soap_instantiate_x__DataSet(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_x__DataSet(soap, _p); _p->__size = __size; _p->item = item; } return _p; }

inline struct x__DataSet * soap_new_set_x__DataSet(struct soap *soap, int __size, struct x__Data *item) { struct x__DataSet *_p = soap_instantiate_x__DataSet(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_x__DataSet(soap, _p); _p->__size = __size; _p->item = item; } return _p; }

inline void soap_delete_x__DataSet(struct soap *soap, struct x__DataSet *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_x__DataSet(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_x__Data
#define SOAP_TYPE_x__Data (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_x__Data(struct soap*, struct x__Data *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_x__Data(struct soap*, const struct x__Data *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_x__Data(struct soap*, const char*, int, const struct x__Data *, const char*);
SOAP_FMAC3 struct x__Data * SOAP_FMAC4 soap_in_x__Data(struct soap*, const char*, struct x__Data *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_x__Data(struct soap*, const struct x__Data *, const char*, const char*);

#ifndef soap_write_x__Data
#define soap_write_x__Data(soap, data) ( soap_begin(soap), soap_serialize_x__Data(soap, data), soap_begin_send(soap) || soap_put_x__Data(soap, data, "x:Data", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct x__Data * SOAP_FMAC4 soap_get_x__Data(struct soap*, struct x__Data *, const char*, const char*);

#ifndef soap_read_x__Data
#define soap_read_x__Data(soap, data) ( soap_begin_recv(soap) || !soap_get_x__Data(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct x__Data * SOAP_FMAC2 soap_instantiate_x__Data(struct soap*, int, const char*, const char*, size_t*);

inline struct x__Data * soap_new_x__Data(struct soap *soap, int n = -1) { return soap_instantiate_x__Data(soap, n, NULL, NULL, NULL); }

inline struct x__Data * soap_new_req_x__Data(struct soap *soap, struct _xop__Include& xop__Include) { struct x__Data *_p = soap_instantiate_x__Data(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_x__Data(soap, _p); _p->xop__Include = xop__Include; } return _p; }

inline struct x__Data * soap_new_set_x__Data(struct soap *soap, struct _xop__Include& xop__Include, char *xmime5__contentType) { struct x__Data *_p = soap_instantiate_x__Data(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_x__Data(soap, _p); _p->xop__Include = xop__Include; _p->xmime5__contentType = xmime5__contentType; } return _p; }

inline void soap_delete_x__Data(struct soap *soap, struct x__Data *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_x__Data(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__upload_message
#define SOAP_TYPE_ns__upload_message (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__upload_message(struct soap*, struct ns__upload_message *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__upload_message(struct soap*, const struct ns__upload_message *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__upload_message(struct soap*, const char*, int, const struct ns__upload_message *, const char*);
SOAP_FMAC3 struct ns__upload_message * SOAP_FMAC4 soap_in_ns__upload_message(struct soap*, const char*, struct ns__upload_message *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__upload_message(struct soap*, const struct ns__upload_message *, const char*, const char*);

#ifndef soap_write_ns__upload_message
#define soap_write_ns__upload_message(soap, data) ( soap_begin(soap), soap_serialize_ns__upload_message(soap, data), soap_begin_send(soap) || soap_put_ns__upload_message(soap, data, "ns:upload-message", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__upload_message * SOAP_FMAC4 soap_get_ns__upload_message(struct soap*, struct ns__upload_message *, const char*, const char*);

#ifndef soap_read_ns__upload_message
#define soap_read_ns__upload_message(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__upload_message(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__upload_message * SOAP_FMAC2 soap_instantiate_ns__upload_message(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__upload_message * soap_new_ns__upload_message(struct soap *soap, int n = -1) { return soap_instantiate_ns__upload_message(soap, n, NULL, NULL, NULL); }

inline struct ns__upload_message * soap_new_req_ns__upload_message(struct soap *soap, int returntype) { struct ns__upload_message *_p = soap_instantiate_ns__upload_message(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__upload_message(soap, _p); _p->returntype = returntype; } return _p; }

inline struct ns__upload_message * soap_new_set_ns__upload_message(struct soap *soap, char *Device_ID, int returntype, struct ns__MsgList *state, char *authstr) { struct ns__upload_message *_p = soap_instantiate_ns__upload_message(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__upload_message(soap, _p); _p->Device_ID = Device_ID; _p->returntype = returntype; _p->state = state; _p->authstr = authstr; } return _p; }

inline void soap_delete_ns__upload_message(struct soap *soap, struct ns__upload_message *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__upload_message(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__upload_messageResponse
#define SOAP_TYPE_ns__upload_messageResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__upload_messageResponse(struct soap*, struct ns__upload_messageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__upload_messageResponse(struct soap*, const struct ns__upload_messageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__upload_messageResponse(struct soap*, const char*, int, const struct ns__upload_messageResponse *, const char*);
SOAP_FMAC3 struct ns__upload_messageResponse * SOAP_FMAC4 soap_in_ns__upload_messageResponse(struct soap*, const char*, struct ns__upload_messageResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__upload_messageResponse(struct soap*, const struct ns__upload_messageResponse *, const char*, const char*);

#ifndef soap_write_ns__upload_messageResponse
#define soap_write_ns__upload_messageResponse(soap, data) ( soap_begin(soap), soap_serialize_ns__upload_messageResponse(soap, data), soap_begin_send(soap) || soap_put_ns__upload_messageResponse(soap, data, "ns:upload-messageResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__upload_messageResponse * SOAP_FMAC4 soap_get_ns__upload_messageResponse(struct soap*, struct ns__upload_messageResponse *, const char*, const char*);

#ifndef soap_read_ns__upload_messageResponse
#define soap_read_ns__upload_messageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__upload_messageResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__upload_messageResponse * SOAP_FMAC2 soap_instantiate_ns__upload_messageResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__upload_messageResponse * soap_new_ns__upload_messageResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns__upload_messageResponse(soap, n, NULL, NULL, NULL); }

inline struct ns__upload_messageResponse * soap_new_req_ns__upload_messageResponse(struct soap *soap) { struct ns__upload_messageResponse *_p = soap_instantiate_ns__upload_messageResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__upload_messageResponse(soap, _p); } return _p; }

inline struct ns__upload_messageResponse * soap_new_set_ns__upload_messageResponse(struct soap *soap, struct ns__ResultList *result) { struct ns__upload_messageResponse *_p = soap_instantiate_ns__upload_messageResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__upload_messageResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns__upload_messageResponse(struct soap *soap, struct ns__upload_messageResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__upload_messageResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__ResultList
#define SOAP_TYPE_ns__ResultList (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__ResultList(struct soap*, struct ns__ResultList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__ResultList(struct soap*, struct ns__ResultList const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__ResultList(struct soap*, const char*, int, const struct ns__ResultList *, const char*);
SOAP_FMAC3 struct ns__ResultList * SOAP_FMAC4 soap_in_ns__ResultList(struct soap*, const char*, struct ns__ResultList *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__ResultList(struct soap*, const struct ns__ResultList *, const char*, const char*);

#ifndef soap_write_ns__ResultList
#define soap_write_ns__ResultList(soap, data) ( soap_begin(soap), soap_serialize_ns__ResultList(soap, data), soap_begin_send(soap) || soap_put_ns__ResultList(soap, data, "ns:ResultList", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__ResultList * SOAP_FMAC4 soap_get_ns__ResultList(struct soap*, struct ns__ResultList *, const char*, const char*);

#ifndef soap_read_ns__ResultList
#define soap_read_ns__ResultList(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__ResultList(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__ResultList * SOAP_FMAC2 soap_instantiate_ns__ResultList(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__ResultList * soap_new_ns__ResultList(struct soap *soap, int n = -1) { return soap_instantiate_ns__ResultList(soap, n, NULL, NULL, NULL); }

inline struct ns__ResultList * soap_new_req_ns__ResultList(struct soap *soap) { struct ns__ResultList *_p = soap_instantiate_ns__ResultList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__ResultList(soap, _p); } return _p; }

inline struct ns__ResultList * soap_new_set_ns__ResultList(struct soap *soap, struct ns__ResultItem **__ptr, int __size) { struct ns__ResultList *_p = soap_instantiate_ns__ResultList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__ResultList(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_ns__ResultList(struct soap *soap, struct ns__ResultList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__ResultList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__ResultItem
#define SOAP_TYPE_ns__ResultItem (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__ResultItem(struct soap*, struct ns__ResultItem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__ResultItem(struct soap*, const struct ns__ResultItem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__ResultItem(struct soap*, const char*, int, const struct ns__ResultItem *, const char*);
SOAP_FMAC3 struct ns__ResultItem * SOAP_FMAC4 soap_in_ns__ResultItem(struct soap*, const char*, struct ns__ResultItem *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__ResultItem(struct soap*, const struct ns__ResultItem *, const char*, const char*);

#ifndef soap_write_ns__ResultItem
#define soap_write_ns__ResultItem(soap, data) ( soap_begin(soap), soap_serialize_ns__ResultItem(soap, data), soap_begin_send(soap) || soap_put_ns__ResultItem(soap, data, "ns:ResultItem", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__ResultItem * SOAP_FMAC4 soap_get_ns__ResultItem(struct soap*, struct ns__ResultItem *, const char*, const char*);

#ifndef soap_read_ns__ResultItem
#define soap_read_ns__ResultItem(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__ResultItem(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__ResultItem * SOAP_FMAC2 soap_instantiate_ns__ResultItem(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__ResultItem * soap_new_ns__ResultItem(struct soap *soap, int n = -1) { return soap_instantiate_ns__ResultItem(soap, n, NULL, NULL, NULL); }

inline struct ns__ResultItem * soap_new_req_ns__ResultItem(struct soap *soap, unsigned long TimeStamp) { struct ns__ResultItem *_p = soap_instantiate_ns__ResultItem(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__ResultItem(soap, _p); _p->TimeStamp = TimeStamp; } return _p; }

inline struct ns__ResultItem * soap_new_set_ns__ResultItem(struct soap *soap, unsigned long TimeStamp, char *Order, char *Param) { struct ns__ResultItem *_p = soap_instantiate_ns__ResultItem(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__ResultItem(soap, _p); _p->TimeStamp = TimeStamp; _p->Order = Order; _p->Param = Param; } return _p; }

inline void soap_delete_ns__ResultItem(struct soap *soap, struct ns__ResultItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__ResultItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__MsgList
#define SOAP_TYPE_ns__MsgList (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__MsgList(struct soap*, struct ns__MsgList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__MsgList(struct soap*, struct ns__MsgList const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__MsgList(struct soap*, const char*, int, const struct ns__MsgList *, const char*);
SOAP_FMAC3 struct ns__MsgList * SOAP_FMAC4 soap_in_ns__MsgList(struct soap*, const char*, struct ns__MsgList *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__MsgList(struct soap*, const struct ns__MsgList *, const char*, const char*);

#ifndef soap_write_ns__MsgList
#define soap_write_ns__MsgList(soap, data) ( soap_begin(soap), soap_serialize_ns__MsgList(soap, data), soap_begin_send(soap) || soap_put_ns__MsgList(soap, data, "ns:MsgList", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__MsgList * SOAP_FMAC4 soap_get_ns__MsgList(struct soap*, struct ns__MsgList *, const char*, const char*);

#ifndef soap_read_ns__MsgList
#define soap_read_ns__MsgList(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__MsgList(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__MsgList * SOAP_FMAC2 soap_instantiate_ns__MsgList(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__MsgList * soap_new_ns__MsgList(struct soap *soap, int n = -1) { return soap_instantiate_ns__MsgList(soap, n, NULL, NULL, NULL); }

inline struct ns__MsgList * soap_new_req_ns__MsgList(struct soap *soap) { struct ns__MsgList *_p = soap_instantiate_ns__MsgList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__MsgList(soap, _p); } return _p; }

inline struct ns__MsgList * soap_new_set_ns__MsgList(struct soap *soap, struct ns__MsgItem *__ptr, int __size) { struct ns__MsgList *_p = soap_instantiate_ns__MsgList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__MsgList(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_ns__MsgList(struct soap *soap, struct ns__MsgList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__MsgList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__MsgItem
#define SOAP_TYPE_ns__MsgItem (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__MsgItem(struct soap*, struct ns__MsgItem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__MsgItem(struct soap*, const struct ns__MsgItem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__MsgItem(struct soap*, const char*, int, const struct ns__MsgItem *, const char*);
SOAP_FMAC3 struct ns__MsgItem * SOAP_FMAC4 soap_in_ns__MsgItem(struct soap*, const char*, struct ns__MsgItem *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__MsgItem(struct soap*, const struct ns__MsgItem *, const char*, const char*);

#ifndef soap_write_ns__MsgItem
#define soap_write_ns__MsgItem(soap, data) ( soap_begin(soap), soap_serialize_ns__MsgItem(soap, data), soap_begin_send(soap) || soap_put_ns__MsgItem(soap, data, "ns:MsgItem", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__MsgItem * SOAP_FMAC4 soap_get_ns__MsgItem(struct soap*, struct ns__MsgItem *, const char*, const char*);

#ifndef soap_read_ns__MsgItem
#define soap_read_ns__MsgItem(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__MsgItem(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns__MsgItem * SOAP_FMAC2 soap_instantiate_ns__MsgItem(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__MsgItem * soap_new_ns__MsgItem(struct soap *soap, int n = -1) { return soap_instantiate_ns__MsgItem(soap, n, NULL, NULL, NULL); }

inline struct ns__MsgItem * soap_new_req_ns__MsgItem(struct soap *soap) { struct ns__MsgItem *_p = soap_instantiate_ns__MsgItem(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__MsgItem(soap, _p); } return _p; }

inline struct ns__MsgItem * soap_new_set_ns__MsgItem(struct soap *soap, char *type, char *msg) { struct ns__MsgItem *_p = soap_instantiate_ns__MsgItem(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__MsgItem(soap, _p); _p->type = type; _p->msg = msg; } return _p; }

inline void soap_delete_ns__MsgItem(struct soap *soap, struct ns__MsgItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__MsgItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xmime5__base64Binary
#define SOAP_TYPE_xmime5__base64Binary (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xmime5__base64Binary(struct soap*, struct xmime5__base64Binary *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xmime5__base64Binary(struct soap*, struct xmime5__base64Binary const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xmime5__base64Binary(struct soap*, const char*, int, const struct xmime5__base64Binary *, const char*);
SOAP_FMAC3 struct xmime5__base64Binary * SOAP_FMAC4 soap_in_xmime5__base64Binary(struct soap*, const char*, struct xmime5__base64Binary *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xmime5__base64Binary(struct soap*, const struct xmime5__base64Binary *, const char*, const char*);

#ifndef soap_write_xmime5__base64Binary
#define soap_write_xmime5__base64Binary(soap, data) ( soap_begin(soap), soap_serialize_xmime5__base64Binary(soap, data), soap_begin_send(soap) || soap_put_xmime5__base64Binary(soap, data, "xmime5:base64Binary", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xmime5__base64Binary * SOAP_FMAC4 soap_get_xmime5__base64Binary(struct soap*, struct xmime5__base64Binary *, const char*, const char*);

#ifndef soap_read_xmime5__base64Binary
#define soap_read_xmime5__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xmime5__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xmime5__base64Binary * SOAP_FMAC2 soap_instantiate_xmime5__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline struct xmime5__base64Binary * soap_new_xmime5__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xmime5__base64Binary(soap, n, NULL, NULL, NULL); }

inline struct xmime5__base64Binary * soap_new_req_xmime5__base64Binary(struct soap *soap) { struct xmime5__base64Binary *_p = soap_instantiate_xmime5__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xmime5__base64Binary(soap, _p); } return _p; }

inline struct xmime5__base64Binary * soap_new_set_xmime5__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { struct xmime5__base64Binary *_p = soap_instantiate_xmime5__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xmime5__base64Binary(soap, _p); _p->__ptr = __ptr; _p->__size = __size; _p->id = id; _p->type = type; _p->options = options; } return _p; }

inline void soap_delete_xmime5__base64Binary(struct soap *soap, struct xmime5__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xmime5__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__xop__Include
#define SOAP_TYPE__xop__Include (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xop__Include(struct soap*, struct _xop__Include *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__xop__Include(struct soap*, struct _xop__Include const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xop__Include(struct soap*, const char*, int, const struct _xop__Include *, const char*);
SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_in__xop__Include(struct soap*, const char*, struct _xop__Include *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__xop__Include(struct soap*, const struct _xop__Include *, const char*, const char*);

#ifndef soap_write__xop__Include
#define soap_write__xop__Include(soap, data) ( soap_begin(soap), soap_serialize__xop__Include(soap, data), soap_begin_send(soap) || soap_put__xop__Include(soap, data, "xop:Include", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_get__xop__Include(struct soap*, struct _xop__Include *, const char*, const char*);

#ifndef soap_read__xop__Include
#define soap_read__xop__Include(soap, data) ( soap_begin_recv(soap) || !soap_get__xop__Include(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _xop__Include * SOAP_FMAC2 soap_instantiate__xop__Include(struct soap*, int, const char*, const char*, size_t*);

inline struct _xop__Include * soap_new__xop__Include(struct soap *soap, int n = -1) { return soap_instantiate__xop__Include(soap, n, NULL, NULL, NULL); }

inline struct _xop__Include * soap_new_req__xop__Include(struct soap *soap) { struct _xop__Include *_p = soap_instantiate__xop__Include(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__xop__Include(soap, _p); } return _p; }

inline struct _xop__Include * soap_new_set__xop__Include(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { struct _xop__Include *_p = soap_instantiate__xop__Include(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__xop__Include(soap, _p); _p->__ptr = __ptr; _p->__size = __size; _p->id = id; _p->type = type; _p->options = options; } return _p; }

inline void soap_delete__xop__Include(struct soap *soap, struct _xop__Include *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__xop__Include(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTons__GetDataResponse
#define SOAP_TYPE_PointerTons__GetDataResponse (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__GetDataResponse(struct soap*, struct ns__GetDataResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__GetDataResponse(struct soap*, const char *, int, struct ns__GetDataResponse *const*, const char *);
SOAP_FMAC3 struct ns__GetDataResponse ** SOAP_FMAC4 soap_in_PointerTons__GetDataResponse(struct soap*, const char*, struct ns__GetDataResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__GetDataResponse(struct soap*, struct ns__GetDataResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons__GetDataResponse
#define soap_write_PointerTons__GetDataResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons__GetDataResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons__GetDataResponse(soap, data, "ns:GetDataResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__GetDataResponse ** SOAP_FMAC4 soap_get_PointerTons__GetDataResponse(struct soap*, struct ns__GetDataResponse **, const char*, const char*);

#ifndef soap_read_PointerTons__GetDataResponse
#define soap_read_PointerTons__GetDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__GetDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_begin(soap), soap_serialize_PointerToint(soap, data), soap_begin_send(soap) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTox__Keys
#define SOAP_TYPE_PointerTox__Keys (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTox__Keys(struct soap*, struct x__Keys *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTox__Keys(struct soap*, const char *, int, struct x__Keys *const*, const char *);
SOAP_FMAC3 struct x__Keys ** SOAP_FMAC4 soap_in_PointerTox__Keys(struct soap*, const char*, struct x__Keys **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTox__Keys(struct soap*, struct x__Keys *const*, const char*, const char*);

#ifndef soap_write_PointerTox__Keys
#define soap_write_PointerTox__Keys(soap, data) ( soap_begin(soap), soap_serialize_PointerTox__Keys(soap, data), soap_begin_send(soap) || soap_put_PointerTox__Keys(soap, data, "x:Keys", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct x__Keys ** SOAP_FMAC4 soap_get_PointerTox__Keys(struct soap*, struct x__Keys **, const char*, const char*);

#ifndef soap_read_PointerTox__Keys
#define soap_read_PointerTox__Keys(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTox__Keys(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTox__DataSet
#define SOAP_TYPE_PointerTox__DataSet (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTox__DataSet(struct soap*, struct x__DataSet *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTox__DataSet(struct soap*, const char *, int, struct x__DataSet *const*, const char *);
SOAP_FMAC3 struct x__DataSet ** SOAP_FMAC4 soap_in_PointerTox__DataSet(struct soap*, const char*, struct x__DataSet **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTox__DataSet(struct soap*, struct x__DataSet *const*, const char*, const char*);

#ifndef soap_write_PointerTox__DataSet
#define soap_write_PointerTox__DataSet(soap, data) ( soap_begin(soap), soap_serialize_PointerTox__DataSet(soap, data), soap_begin_send(soap) || soap_put_PointerTox__DataSet(soap, data, "x:DataSet", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct x__DataSet ** SOAP_FMAC4 soap_get_PointerTox__DataSet(struct soap*, struct x__DataSet **, const char*, const char*);

#ifndef soap_read_PointerTox__DataSet
#define soap_read_PointerTox__DataSet(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTox__DataSet(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostring
#define SOAP_TYPE_PointerTostring (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);

#ifndef soap_write_PointerTostring
#define soap_write_PointerTostring(soap, data) ( soap_begin(soap), soap_serialize_PointerTostring(soap, data), soap_begin_send(soap) || soap_put_PointerTostring(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);

#ifndef soap_read_PointerTostring
#define soap_read_PointerTostring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostring(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTox__Data
#define SOAP_TYPE_PointerTox__Data (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTox__Data(struct soap*, struct x__Data *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTox__Data(struct soap*, const char *, int, struct x__Data *const*, const char *);
SOAP_FMAC3 struct x__Data ** SOAP_FMAC4 soap_in_PointerTox__Data(struct soap*, const char*, struct x__Data **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTox__Data(struct soap*, struct x__Data *const*, const char*, const char*);

#ifndef soap_write_PointerTox__Data
#define soap_write_PointerTox__Data(soap, data) ( soap_begin(soap), soap_serialize_PointerTox__Data(soap, data), soap_begin_send(soap) || soap_put_PointerTox__Data(soap, data, "x:Data", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct x__Data ** SOAP_FMAC4 soap_get_PointerTox__Data(struct soap*, struct x__Data **, const char*, const char*);

#ifndef soap_read_PointerTox__Data
#define soap_read_PointerTox__Data(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTox__Data(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons__ResultList
#define SOAP_TYPE_PointerTons__ResultList (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__ResultList(struct soap*, struct ns__ResultList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__ResultList(struct soap*, const char *, int, struct ns__ResultList *const*, const char *);
SOAP_FMAC3 struct ns__ResultList ** SOAP_FMAC4 soap_in_PointerTons__ResultList(struct soap*, const char*, struct ns__ResultList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__ResultList(struct soap*, struct ns__ResultList *const*, const char*, const char*);

#ifndef soap_write_PointerTons__ResultList
#define soap_write_PointerTons__ResultList(soap, data) ( soap_begin(soap), soap_serialize_PointerTons__ResultList(soap, data), soap_begin_send(soap) || soap_put_PointerTons__ResultList(soap, data, "ns:ResultList", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__ResultList ** SOAP_FMAC4 soap_get_PointerTons__ResultList(struct soap*, struct ns__ResultList **, const char*, const char*);

#ifndef soap_read_PointerTons__ResultList
#define soap_read_PointerTons__ResultList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__ResultList(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons__MsgList
#define SOAP_TYPE_PointerTons__MsgList (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__MsgList(struct soap*, struct ns__MsgList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__MsgList(struct soap*, const char *, int, struct ns__MsgList *const*, const char *);
SOAP_FMAC3 struct ns__MsgList ** SOAP_FMAC4 soap_in_PointerTons__MsgList(struct soap*, const char*, struct ns__MsgList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__MsgList(struct soap*, struct ns__MsgList *const*, const char*, const char*);

#ifndef soap_write_PointerTons__MsgList
#define soap_write_PointerTons__MsgList(soap, data) ( soap_begin(soap), soap_serialize_PointerTons__MsgList(soap, data), soap_begin_send(soap) || soap_put_PointerTons__MsgList(soap, data, "ns:MsgList", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__MsgList ** SOAP_FMAC4 soap_get_PointerTons__MsgList(struct soap*, struct ns__MsgList **, const char*, const char*);

#ifndef soap_read_PointerTons__MsgList
#define soap_read_PointerTons__MsgList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__MsgList(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerTons__ResultItem
#define SOAP_TYPE_PointerToPointerTons__ResultItem (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons__ResultItem(struct soap*, struct ns__ResultItem **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons__ResultItem(struct soap*, const char *, int, struct ns__ResultItem **const*, const char *);
SOAP_FMAC3 struct ns__ResultItem *** SOAP_FMAC4 soap_in_PointerToPointerTons__ResultItem(struct soap*, const char*, struct ns__ResultItem ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons__ResultItem(struct soap*, struct ns__ResultItem **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerTons__ResultItem
#define soap_write_PointerToPointerTons__ResultItem(soap, data) ( soap_begin(soap), soap_serialize_PointerToPointerTons__ResultItem(soap, data), soap_begin_send(soap) || soap_put_PointerToPointerTons__ResultItem(soap, data, "ns:ResultItem", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__ResultItem *** SOAP_FMAC4 soap_get_PointerToPointerTons__ResultItem(struct soap*, struct ns__ResultItem ***, const char*, const char*);

#ifndef soap_read_PointerToPointerTons__ResultItem
#define soap_read_PointerToPointerTons__ResultItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons__ResultItem(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons__ResultItem
#define SOAP_TYPE_PointerTons__ResultItem (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__ResultItem(struct soap*, struct ns__ResultItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__ResultItem(struct soap*, const char *, int, struct ns__ResultItem *const*, const char *);
SOAP_FMAC3 struct ns__ResultItem ** SOAP_FMAC4 soap_in_PointerTons__ResultItem(struct soap*, const char*, struct ns__ResultItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__ResultItem(struct soap*, struct ns__ResultItem *const*, const char*, const char*);

#ifndef soap_write_PointerTons__ResultItem
#define soap_write_PointerTons__ResultItem(soap, data) ( soap_begin(soap), soap_serialize_PointerTons__ResultItem(soap, data), soap_begin_send(soap) || soap_put_PointerTons__ResultItem(soap, data, "ns:ResultItem", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__ResultItem ** SOAP_FMAC4 soap_get_PointerTons__ResultItem(struct soap*, struct ns__ResultItem **, const char*, const char*);

#ifndef soap_read_PointerTons__ResultItem
#define soap_read_PointerTons__ResultItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__ResultItem(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons__MsgItem
#define SOAP_TYPE_PointerTons__MsgItem (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__MsgItem(struct soap*, struct ns__MsgItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__MsgItem(struct soap*, const char *, int, struct ns__MsgItem *const*, const char *);
SOAP_FMAC3 struct ns__MsgItem ** SOAP_FMAC4 soap_in_PointerTons__MsgItem(struct soap*, const char*, struct ns__MsgItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__MsgItem(struct soap*, struct ns__MsgItem *const*, const char*, const char*);

#ifndef soap_write_PointerTons__MsgItem
#define soap_write_PointerTons__MsgItem(soap, data) ( soap_begin(soap), soap_serialize_PointerTons__MsgItem(soap, data), soap_begin_send(soap) || soap_put_PointerTons__MsgItem(soap, data, "ns:MsgItem", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns__MsgItem ** SOAP_FMAC4 soap_get_PointerTons__MsgItem(struct soap*, struct ns__MsgItem **, const char*, const char*);

#ifndef soap_read_PointerTons__MsgItem
#define soap_read_PointerTons__MsgItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__MsgItem(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_begin(soap), soap_serialize_PointerTounsignedByte(soap, data), soap_begin_send(soap) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin(soap), soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin(soap), soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

/* End of soapH.h */
